import { appRouter } from "@answeroverflow/api";
import { createSSGContext } from "@answeroverflow/api/src/router/context";
import { MessageResultPage } from "@answeroverflow/ui";
import { createProxySSGHelpers } from "@trpc/react-query/ssg";
import Head from "next/head";
import superjson from "superjson";
import { trpc } from "@answeroverflow/ui";

export default function Home() {
  const postQuery = trpc.messages.all.useQuery();
  if (postQuery.status !== "success") {
    // won't happen since we're using `fallback: "blocking"`
    return <>Loading...</>;
  }
  const { data } = postQuery;

  return (
    <>
      <Head>
        <title>Answer Overflow</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MessageResultPage
        messages={data}
        channel={{
          id: "123",
          name: "general",
          server_id: "843301848295014421",
          parent_id: null,
          type: 0,
        }}
        server={{
          id: "843301848295014421",
          name: "Answer Overflow",
          icon: null,
        }}
      />
    </>
  );
}

export async function getStaticProps() {
  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: await createSSGContext(),
    transformer: superjson, // optional - adds superjson serialization
  });
  // prefetch `post.byId`
  await ssg.messages.all.prefetch();
  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
    revalidate: 1,
  };
}
