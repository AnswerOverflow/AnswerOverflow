name: CI

on:
  push:
  pull_request:
    branches:
      - master

env:
  # None of these are real secrets although this should probably be updated
  DATABASE_URL: mysql://root:mysql@localhost:33306/api_dev
  VITE_DATABASE_URL: mysql://root:mysql@localhost:33306/api_dev
  VITE_ELASTICSEARCH_URL: http://localhost:9200
  VITE_ELASTICSEARCH_MESSAGE_INDEX: messages
  VITE_ELASTICSEARCH_INDEX: api_dev
  VITE_ELASTICSEARCH_USERNAME: elastic
  VITE_ELASTICSEARCH_PASSWORD: changeme
  OWNERS: "[]"
  DISCORD_CLIENT_ID: "123"
  VITE_DISCORD_CLIENT_ID: "123"

jobs:
  build:
      name: Build and Test
      timeout-minutes: 15
      runs-on: ubuntu-latest

    # To use Remote Caching, uncomment the next lines and follow the steps below.
    # env:
    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

      steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.4       

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-



      - name: Start containers # TODO: Use dev container docker-compose instead if possible
        run: docker-compose -f "docker-compose.yml" up -d --build

      - name: Install dependencies
        # Playright is used for storybook, possible move that into package.json instead?
        run: pnpm i && npx playwright install-deps

      - name: Generate Prisma Client
        run: pnpm turbo db:generate

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
